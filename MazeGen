from asyncio import start_server
import numpy as np
import random

#set the size of the playable matrix
rows = 4
columns = 4

#create a matrix of the specified size then fill with -1's
maze = np.zeros((rows, columns))
maze.fill(-1)

#pick a start point denoted by 2
startc = random.randint(0,columns-1)
maze[0,startc] = 2
print(maze)

#generate maze path
#identify frontier cells
frontier = []
for indexr, row in enumerate(maze): 
    for indexc, num in enumerate(row):
        if num == 2 or num == 0:
            print(indexr, row)
            print(indexc, num)
            print(maze[indexr, indexc])
            if maze[indexr+2, indexc] == -1:
                place = [indexr+2, indexc]
                print(place)
                frontier = frontier.append(place)
                print(frontier)


            

#remove poser frontier cells


#ramdonly pick a frontier cell


#make chosen cell into a passage and 
#connect new passage with old passage





#pick an end point denoted by 3
#endc = random.randint(0,columns)

#add padding around the matrix (-1's)